from flask import Flask, request, jsonify, render_template_string
import sqlite3

from pywebpush import webpush, WebPushException
import json

VAPID_PUBLIC_KEY = 'BEwDtGd3UZQsVa2XJoqQc_d5_8l_irrTEyfqX847SwqA3asa7WleP9yKBsAJ2GsFsjTMl-f8sy5rl4QCAITlVLY'

VAPID_PRIVATE_KEY = 'c2kwyw64IFjjEvqIF7FItp3T0JAOafcbud9dB1Xzd4c'

SUBSCRIPTIONS_DB = 'subscriptions.json'

app = Flask(__name__)

DB_FILE = 'feeder.db'
current_status = {'state': 'idle'}

# Initialize the database
def init_db():
    conn = sqlite3.connect(DB_FILE)
    c = conn.cursor()
    # Feed logs table
    c.execute('''
        CREATE TABLE IF NOT EXISTS feed_logs (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            timestamp TEXT,
            amount TEXT,
            status TEXT,
            notes TEXT
        )
    ''')
    # Schedules table
    c.execute('''
        CREATE TABLE IF NOT EXISTS feed_schedules (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            time TEXT,
            amount TEXT,
            notes TEXT
        )
    ''')
    conn.commit()
    conn.close()

# Log a feed event
from datetime import datetime

def log_feed(amount, status, notes=""):
    now = datetime.now().strftime('%Y-%m-%d %H:%M:%S')  # Local time
    conn = sqlite3.connect(DB_FILE)
    c = conn.cursor()
    c.execute('''
        INSERT INTO feed_logs (timestamp, amount, status, notes)
        VALUES (?, ?, ?, ?)
    ''', (now, amount, status, notes))
    conn.commit()
    conn.close()


@app.route('/')
def home():
    return render_template_string('''
    <h1>üêæ Smart Pet Feeder</h1>
    <button onclick="window.location.href='/schedule'">Schedule Feeding</button><br><br>
    <button onclick="window.location.href='/devices'">My Devices</button><br><br>
    <button id="subBtn" onclick="subscribe()">Subscribe to Notifications</button><br><br>
    <button onclick="feedNow()">Feed Now</button>
    <p>Status: <span id="status">Loading...</span></p>
    <h2>Feed Logs:</h2>
    <table border="1">
      <thead><tr><th>ID</th><th>Timestamp</th><th>Amount</th><th>Status</th><th>Notes</th></tr></thead>
      <tbody id="logs"></tbody>
    </table>
    <script>
    function feedNow() {
      fetch('/feed-now', {method:'POST'})
      .then(res => res.json())
      .then(data => {
        alert(data.message);
        loadLogs();
        loadStatus();
      });
    }
    function loadLogs() {
      fetch('/logs')
      .then(res => res.json())
      .then(data => {
        let html = '';
        data.forEach(row => {
          html += `<tr>
            <td>${row.id}</td>
            <td>${row.timestamp}</td>
            <td>${row.amount}</td>
            <td>${row.status}</td>
            <td>${row.notes}</td>
          </tr>`;
        });
        document.getElementById('logs').innerHTML = html;
      });
    }
    function loadStatus() {
      fetch('/status')
      .then(res => res.json())
      .then(data => {
        document.getElementById('status').innerText = data.state;
      });
    }
    loadLogs();
    loadStatus();
    setInterval(loadStatus, 5000); // auto-refresh status every 5 sec

    function subscribe() {
  if ('serviceWorker' in navigator) {
    navigator.serviceWorker.register('/static/sw.js').then(function(reg) {
      return reg.pushManager.subscribe({
        userVisibleOnly: true,
        applicationServerKey: urlBase64ToUint8Array('BEwDtGd3UZQsVa2XJoqQc_d5_8l_irrTEyfqX847SwqA3asa7WleP9yKBsAJ2GsFsjTMl-f8sy5rl4QCAITlVLY')
      });
    }).then(function(sub) {
      return fetch('/subscribe', {
        method: 'POST',
        body: JSON.stringify(sub),
???LINES MISSING
???LINES MISSING
???LINES MISSING
